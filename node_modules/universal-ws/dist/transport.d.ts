export declare enum Type {
    Browser = 0,
    Node = 1
}
export declare enum ReadyState {
    Connecting = 0,
    Open = 1,
    Closing = 2,
    Closed = 3
}
export declare enum StatusCode {
    Normal_Closure = 1000,
    Going_Away = 1001,
    Protocol_Error = 1002,
    Unexpected_Data = 1003,
    Reserved_For_Future = 1004,
    No_Status_Code_Present = 1005,
    Invalid_Data = 1006,
    Message_Error = 1007,
    Message_Too_Large = 1008,
    Unexpected_Error = 1011
}
export declare class UniversalWs {
    private ws?;
    constructor(host: string, options: {
        parameters?: string[];
        perMessageDeflateOptions?: any;
    });
    private encodeParameters;
    on(eventName: 'open' | 'message' | 'close' | 'error', callback: any): void;
    send(message: string): void;
    close(code?: number, reason?: string): void;
    getReadyState(): string | undefined;
}
//# sourceMappingURL=transport.d.ts.map